# Process of maintaining and presenting data
- read data by URI /en/goods/logic/rules.html
- extract nwDataUri = /en/goods/logic/rules
- title: load settings for all the top directories
  process:  
    - detect directories
    - dirs:
      - /
      - /en
      - /en/goods
      - /en/goods/logic
      - /en/goods/logic/rules
    - detect directory settings to load before the file.
    - files:
      - /_.yaml
      - /en/_.yaml
      - /en/goods/_.yaml
      - /en/goods/logic/_.yaml
      - /en/goods/logic/rules/_.yaml
    - read all the existing files into the object
    - settings:
      - fn:
        - loadData(files)
        - store in cache cache[file] = settings
- title: load data for current URI
  process:
    - read the URI file data
    - file: /en/goods/logic/rules.yaml
    - store in cache cache[file] = data
- title: render data
  process:
    - read all renders in ./src/render/item/**
    - render with every item({...settings, ...data})
    - render all renders in ./src/render/html/**
    - render with every html(html)
    - data: settings + loadData(file)
    - data is loaded, render the data according to the data render options ($hidden, $theme, $layout, $redirect)
    - html:
      - fn: render(data)

- renders:
  - config.yaml:
    # define the order and enabled renders, comment to disable
    - item/:  
      - redirects # redirects are used for new websites on nanâ€¢web copied from the legacy
      # - redirectsHtaccess
      - search
      - html
    - html/:
      - emails
      - scripts
      - styles
      # - minify
    - all/:
      
  - item/: # ./src/render/item/redirects.js
    - fn: redirects(item) => { key: 'item', output: 'item' }
    - fn: htaccess(item) => { key: 'htaccess', output: 'string', join: "\n" }
    - fn: search(item) => { key: 'search', output: 'string', join: "\n\n", file: null, save: () => 'file' }
    - fn: html(item) => { key: 'html', output: 'string', join: '', file: `${uri}.html`, save: () => 'file' } }
  - html/:
    # ./src/render/html/emails.js
    - fn: emails(html)
    # ./src/render/html/scripts.js
    - fn: scripts(html)
    # ./src/render/html/styles.js
    - fn: styles(html)
    # ./src/render/html/minify.js
    - fn: minify(html)
  - search/:
    - fn: 
  - all:
    - 
